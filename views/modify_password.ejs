<!--  비밀번호 수정 페이지 -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>비밀번호 수정</title>
    <style>
        #password_required {
            color: red;
        }
    </style>
</head>

<body>
    비밀번호 수정 페이지
    <!--
    1. 새로운 비밀번호 입력, 확인
    2. 데이터 베이스(비밀번호 데이터) 수정
     -->

    <form id="submit_form" action="/modify_password" method="post">
        <div>
            <label for="new_password">PASSWORD</label>
            <input id="new_password" type="password" name="new_password">
            <strong id="password_required">대문자 알파벳, 소문자 알파벳, 숫자, 특수문자, 10~16자</strong>
        </div>
        <div>
            <label for="new_password_confirm">PASSWORD_CONFIRM</label>
            <input id="new_password_confirm" type="password" name="new_password_confirm">
            <strong id="password_confirm_required"></strong>
        </div>

        <button type="submit">비밀번호 수정</button>
    </form>


    <script src="https://code.jquery.com/jquery-3.2.1.js" integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE=" crossorigin="anonymous">
    </script>
    <script src="../public/jquery.jsonrpc.js">
    </script>
    <script>
        (jQuery)(function($) {

            $.jsonRPC.setup({});

            // 비밀번호 검사 정규표현식
            var password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[\`\~\!\@\#\$\%\^\&\*\(\)\-\_\=\+\\\|\[\{\]\}\;\:\'\"\,\<\.\>\/\?])([a-zA-Z0-9\`\~\!\@\#\$\%\^\&\*\(\)\-\_\=\+\\\|\[\{\]\}\;\:\'\"\,\<\.\>\/\?]{10,16})$/;

            // 비밀번호 소문자 존재 검사 정규표현식
            var password_lower_case_alphabet_pattern = /[a-z]+/;
            // 비밀번호 대문자 존재 검사 정규표현식
            var password_upper_case_alphabet_pattern = /[A-Z]+/;
            // 비밀번호 숫자 존재 검사 정규표현식
            var password_digit_pattern = /[0-9]+/;
            // 비밀번호 특수문자 존재 검사 정규표현식
            var password_special_letters_pattern = /[\`\~\!\@\#\$\%\^\&\*\(\)\-\_\=\+\\\|\[\{\]\}\;\:\'\"\,\<\.\>\/\?]+/;
            // 비밀번호 길이 검사 정규표현식
            var password_length_pattern = /[a-zA-Z0-9\`\~\!\@\#\$\%\^\&\*\(\)\-\_\=\+\\\|\[\{\]\}\;\:\'\"\,\<\.\>\/\?]{10,16}/;

            // 실시간 비밀번호 필요조건 표시 위한 배열
            var password_required_arr = ["대문자 알파벳", "소문자 알파벳", "숫자", "특수문자", "10~16자", "ok"];

            // 선택 반복 번거로움 해결 위해 자바 스크립트 변수에 할당
            var submit_form = $("#submit_form");
            var new_password = $("#new_password");
            var new_password_confirm = $("#new_password_confirm");

            // 비밀번호 유효성 검사 (키 누를 때 마다 변경)
            new_password.keyup(function() {

                if (password_pattern.test(new_password.val())) {
                    // 비밀번호 필요조건을 모두 만족했을 때, 필요조건 메시지를 초록색 "OK"로 출력
                    $("#password_required").text("OK").css("color", "green");
                } else {
                    // 비밀번호 알파벳 대문자 존재 검사 정규표현식 만족 여부에 따라, 비밀번호 검사 배열의 알파벳 대문자 해당 값 변경
                    if (password_upper_case_alphabet_pattern.test(new_password.val()) == false) {
                        // 불만족 시 "대문자 알파벳"
                        password_required_arr[0] = "대문자 알파벳";
                    } else {
                        // 만족 시 "ok"
                        password_required_arr[0] = "ok";
                    }
                    // 비밀번호 알파벳 소문자 존재 검사 정규표현식 만족 여부에 따라, 비밀번호 검사 배열의 알파벳 소문자 해당 값 변경
                    if (password_lower_case_alphabet_pattern.test(new_password.val()) == false) {
                        // 불만족 시 "소문자 알파벳"
                        password_required_arr[1] = "소문자 알파벳";
                    } else {
                        // 만족 시 "ok"
                        password_required_arr[1] = "ok";
                    }
                    // 비밀번호 숫자 존재 검사 정규표현식 만족 여부에 따라, 비밀번호 검사 배열의 숫자 해당 값 변경
                    if (password_digit_pattern.test(new_password.val()) == false) {
                        // 불만족 시 "숫자"
                        password_required_arr[2] = "숫자";
                    } else {
                        // 만족 시 "ok"
                        password_required_arr[2] = "ok";
                    }
                    // 비밀번호 특수문자 존재 검사 정규표현식 만족 여부에 따라, 비밀번호 검사 배열의 특수문자 해당 값 변경
                    if (password_special_letters_pattern.test(new_password.val()) == false) {
                        // 불만족 시 "특수문자"
                        password_required_arr[3] = "특수문자";
                    } else {
                        // 만족 시 "ok"
                        password_required_arr[3] = "ok";
                    }
                    // 비밀번호 길이 검사 정규표현식 만족 여부에 따라, 비밀번호 검사 배열의 길이 해당 값 변경
                    if (password_length_pattern.test(new_password.val()) == false) {
                        // 불만족 시 "10~16자"
                        password_required_arr[4] = "10~16자";
                    } else {
                        // 만족 시 "ok"
                        password_required_arr[4] = "ok";
                    }

                    // 결과 출력을 위한 문자열을 변수에 할당
                    var result = "";

                    // 비밀번호를 입력할 때 마다 비밀번호 필요조건 배열에서 충족되지 못한 조건 출력

                    // 모든 비밀번호 필요조건 배열 원소들에 대해
                    for (var i = 0; i < password_required_arr.length - 1; i++) {
                        // comma 변수를 일단 false로 초기화 하고,
                        var comma = false;
                        // 불만족 필요조건이 있으면,
                        if (password_required_arr[i] != "ok") {
                            // 필요조건 결과 문자열에 추가하고,
                            result += password_required_arr[i];
                            // 그 이후 불만족 필요조건이 있는지 모두 검사해서
                            for (var j = i + 1; j < password_required_arr.length; j++) {
                                // 불만족 필요조건이 있으면,
                                if (password_required_arr[j] != "ok") {
                                    // 콤마(,)가 필요하므로 콤마 변수값을 true로 변경한다.
                                    comma = true;
                                }
                            }
                            // comma 변수값이 true이면, 필요조건 결과 문자열에 ", " 추가
                            if (comma == true) {
                                result += ", ";
                            }
                        }
                    }
                    // 아이디 필요조건을 모두 만족시키지 못했을 경우, 빨간 글씨로 만족되지 못한 필요조건을 출력한다.
                    $("#password_required").text(result).css("color", "red");

                }
            });

            // 비밀번호 확인 유효성 검사 (키 누를 때 마다 변경)
            new_password_confirm.keyup(function() {
                // 만약 비밀번호와 비밀번호 확인 폼의 값이 서로 같으면
                if (new_password.val() == new_password_confirm.val()) {
                    // 초록색 "OK"를 출력
                    $("#password_confirm_required").text("OK").css("color", "green");
                } else {
                    // 서로 다르면, 빨간색 "incorrect"를 출력
                    $("#password_confirm_required").text("incorrect").css("color", "red");
                }
            });

            // 회원가입 버튼을 눌렀을 때(폼 양식 제출 시에),
            submit_form.submit(function() {
                // 입력 비밀번호가 비밀번호 필요조건에 완전히 충족되지 않으면,
                if (password_pattern.test(new_password.val()) != true) {
                    // 경고창 출력 후,
                    alert("조건에 맞는 PASSWORD를 입력해 주세요.");
                    // 비밀번호 입력 input 태그에 포커스를 주고,
                    new_password.focus();
                    // submit(제출)을 취소한다.
                    return false;
                    // 비밀번호 값과 비밀번호 확인 값이 서로 같지 않으면,
                } else if (new_password.val() != new_password_confirm.val()) {
                    // 경고창 출력 후,
                    alert("PASSWORD와 PASSWORD_CONFIRM이 일치하지 않습니다.");
                    // 비밀번호 확인 입력 input 태그에 포커스를 주고,
                    new_password_confirm.focus();
                    // submit(제출)을 취소한다.
                    return false;
                }
            });

        });
    </script>

</body>

</html>
